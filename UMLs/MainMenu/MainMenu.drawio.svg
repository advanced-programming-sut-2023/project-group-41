<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="702px" height="964px" viewBox="-0.5 -0.5 702 964" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-04-14T15:28:58.439Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36&quot; etag=&quot;qmRSYd_3-Li62YvaA8Zy&quot; version=&quot;21.1.7&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram name=&quot;Page-1&quot; id=&quot;929967ad-93f9-6ef4-fab6-5d389245f69c&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;803&quot; dy=&quot;1506&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1.5&quot; pageWidth=&quot;1169&quot; pageHeight=&quot;826&quot; background=&quot;none&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; style=&quot;;html=1;&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; style=&quot;;html=1;&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-1&quot; value=&quot;MainMenuView&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;740&quot; y=&quot;765&quot; width=&quot;300&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-2&quot; value=&quot;- mainMenuController: MainMenuController&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;300&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;300&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-4&quot; value=&quot;+MainMenuView(): &amp;amp;lt;&amp;amp;lt;constructor&amp;amp;gt;&amp;amp;gt;&amp;lt;br&amp;gt;+ input(scanner: Scanner): void&amp;lt;br&amp;gt;+ output(printable: String, params: Object...): void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;300&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-5&quot; value=&quot;MainMenuController&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;340&quot; y=&quot;370&quot; width=&quot;320&quot; height=&quot;960&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-6&quot; value=&quot;- userDataBase: ArrayList&amp;amp;lt;User&amp;amp;gt;&amp;lt;br&amp;gt;- trades: ArrayList&amp;amp;lt;Trade&amp;amp;gt;&amp;lt;br&amp;gt;- market: ArrayList&amp;amp;lt;Object&amp;amp;gt;&amp;lt;br&amp;gt;- &amp;lt;u&amp;gt;roundNumber: int&amp;lt;/u&amp;gt;&amp;lt;br&amp;gt;- resources: ArrayList&amp;amp;lt;Object&amp;amp;gt;&amp;lt;br&amp;gt;- taxIncome: int&amp;lt;br&amp;gt;- unemployedPopulation: int&amp;lt;br&amp;gt;- map: Map&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;320&quot; height=&quot;124&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-7&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;150&quot; width=&quot;320&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-8&quot; value=&quot;+ MainMenuController(): &amp;amp;lt;&amp;amp;lt;constructor&amp;amp;gt;&amp;amp;gt;&amp;lt;br&amp;gt;+ run(scanner: Scanner): void&amp;lt;br&amp;gt;+ nextPlayer(): void&amp;lt;br&amp;gt;+ endGame(): void&amp;lt;br&amp;gt;+ getRoundNum(): int&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ showMap(x: int, y: int): void&amp;lt;br&amp;gt;+ mapUpLeft(): void&amp;lt;br&amp;gt;+ showMapDetails(x: int, y: int): void&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ showPopularityFactors(): void&amp;lt;br&amp;gt;+ showPopularity(): void&amp;lt;br&amp;gt;+ showFoodList(): void&amp;lt;br&amp;gt;+ foodRate(rate: int): void&amp;lt;br&amp;gt;+ foodRateShow(): void&amp;lt;br&amp;gt;+ taxRate(rate: int): void&amp;lt;br&amp;gt;+ taxRateShow(): void&amp;lt;br&amp;gt;+ fearRate(rate: int): void&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ dropBuilding(x: int, y: int, type: String): void&amp;lt;br&amp;gt;+ selectBuilding(x: int, y: int): void&amp;lt;br&amp;gt;+ createUnit(type: String, count: int): void&amp;lt;br&amp;gt;+ repair(): void&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ selectUnit(x: int, y: int): void&amp;lt;br&amp;gt;+ moveUnit(x: int, y: int): void&amp;lt;br&amp;gt;+ moveUnitTo(x: int, y: int): void&amp;lt;br&amp;gt;+ patrolUnit(x1: int, y1: int, x2: int, y2:int): void&amp;lt;br&amp;gt;+ set(x: int, y: int, situation: Situation): void&amp;lt;br&amp;gt;+ attack(enemy: String): void&amp;lt;br&amp;gt;+ attack(x: int, y: int): void&amp;lt;br&amp;gt;+ pourOil(direction: String): void&amp;lt;br&amp;gt;+ digTunnel(x: int, y: int): void&amp;lt;br&amp;gt;+ build(equipmentName: String): void&amp;lt;br&amp;gt;+ disbandUnit(): void&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ setTexture(x: int, y: int): void&amp;lt;br&amp;gt;+ setTexture(x1: int, y1: int, x2: int, y2: int): void&amp;lt;br&amp;gt;+ clear(x: int, y: int): void&amp;lt;br&amp;gt;+ dropRock(x: int, y: int, direction: String): void&amp;lt;br&amp;gt;+ dropTree(x: int, y: int, type: String): void&amp;lt;br&amp;gt;+ dropBuilding(x: int, y: int, type: String): void&amp;lt;br&amp;gt;+ dropUnit(x: int, y: int, type: String, count: int): void&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ trade(resourceType: String, resourceAmount: String, price: int, message: String): void&amp;lt;br&amp;gt;+ tradeList(): void&amp;lt;br&amp;gt;+ tradeAccept(id: int, message: String): void&amp;lt;br&amp;gt;+ tradeHistory(): void&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;+ showPriceList(): void&amp;lt;br&amp;gt;+ buy(itemName: String, itemAmount: int): void&amp;lt;br&amp;gt;+ sell(itemName: String, itemAmount: int): void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-5&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;158&quot; width=&quot;320&quot; height=&quot;802&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-15&quot; value=&quot;&amp;amp;lt;&amp;amp;lt;Enum&amp;amp;gt;&amp;amp;gt;&amp;lt;br&amp;gt;Situation&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;740&quot; y=&quot;650&quot; width=&quot;140&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;9huVeLQxGzD-RM6x9B-5-16&quot; value=&quot;STANDING,&amp;lt;br&amp;gt;DEFENSIVE,&amp;lt;br&amp;gt;OFFENSIVE;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;9huVeLQxGzD-RM6x9B-5-15&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;140&quot; height=&quot;64&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;0cnsZ5iu7qtsFK9ChAxQ-2&quot; value=&quot;&quot; style=&quot;endArrow=open;endFill=1;endSize=12;html=1;rounded=0;entryX=-0.004;entryY=0.316;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; target=&quot;9huVeLQxGzD-RM6x9B-5-4&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;660&quot; y=&quot;840&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;740&quot; y=&quot;840&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;0cnsZ5iu7qtsFK9ChAxQ-3&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;entryX=1.002;entryY=0.297;entryDx=0;entryDy=0;entryPerimeter=0;exitX=-0.002;exitY=0.282;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;9huVeLQxGzD-RM6x9B-5-16&quot; target=&quot;9huVeLQxGzD-RM6x9B-5-8&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;590&quot; y=&quot;700&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;750&quot; y=&quot;700&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><path d="M 400 421 L 400 395 L 700 395 L 700 421" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 400 421 L 400 515 L 700 515 L 700 421" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 421 L 700 421" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 298px; height: 1px; padding-top: 402px; margin-left: 401px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">MainMenuView</div></div></div></foreignObject><text x="550" y="414" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">MainMenuView</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 290px; height: 1px; padding-top: 428px; margin-left: 406px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 22px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">- mainMenuController: MainMenuController</div></div></div></foreignObject><text x="406" y="440" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- mainMenuController: MainMenuController</text></switch></g><path d="M 400 451 L 700 451" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 290px; height: 1px; padding-top: 462px; margin-left: 406px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 56px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+MainMenuView(): &lt;&lt;constructor&gt;&gt;<br />+ input(scanner: Scanner): void<br />+ output(printable: String, params: Object...): void</div></div></div></foreignObject><text x="406" y="474" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+MainMenuView(): &lt;&lt;constructor&gt;&gt;...</text></switch></g><path d="M 0 26 L 0 0 L 320 0 L 320 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 26 L 0 960 L 320 960 L 320 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 26 L 320 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 318px; height: 1px; padding-top: 7px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">MainMenuController</div></div></div></foreignObject><text x="160" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">MainMenuController</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 310px; height: 1px; padding-top: 33px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 120px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">- userDataBase: ArrayList&lt;User&gt;<br />- trades: ArrayList&lt;Trade&gt;<br />- market: ArrayList&lt;Object&gt;<br />- <u>roundNumber: int</u><br />- resources: ArrayList&lt;Object&gt;<br />- taxIncome: int<br />- unemployedPopulation: int<br />- map: Map</div></div></div></foreignObject><text x="6" y="45" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- userDataBase: ArrayList&lt;User&gt;...</text></switch></g><path d="M 0 154 L 320 154" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 310px; height: 1px; padding-top: 165px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 798px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ MainMenuController(): &lt;&lt;constructor&gt;&gt;<br />+ run(scanner: Scanner): void<br />+ nextPlayer(): void<br />+ endGame(): void<br />+ getRoundNum(): int<br /><br />+ showMap(x: int, y: int): void<br />+ mapUpLeft(): void<br />+ showMapDetails(x: int, y: int): void<br /><br />+ showPopularityFactors(): void<br />+ showPopularity(): void<br />+ showFoodList(): void<br />+ foodRate(rate: int): void<br />+ foodRateShow(): void<br />+ taxRate(rate: int): void<br />+ taxRateShow(): void<br />+ fearRate(rate: int): void<br /><br />+ dropBuilding(x: int, y: int, type: String): void<br />+ selectBuilding(x: int, y: int): void<br />+ createUnit(type: String, count: int): void<br />+ repair(): void<br /><br />+ selectUnit(x: int, y: int): void<br />+ moveUnit(x: int, y: int): void<br />+ moveUnitTo(x: int, y: int): void<br />+ patrolUnit(x1: int, y1: int, x2: int, y2:int): void<br />+ set(x: int, y: int, situation: Situation): void<br />+ attack(enemy: String): void<br />+ attack(x: int, y: int): void<br />+ pourOil(direction: String): void<br />+ digTunnel(x: int, y: int): void<br />+ build(equipmentName: String): void<br />+ disbandUnit(): void<br /><br />+ setTexture(x: int, y: int): void<br />+ setTexture(x1: int, y1: int, x2: int, y2: int): void<br />+ clear(x: int, y: int): void<br />+ dropRock(x: int, y: int, direction: String): void<br />+ dropTree(x: int, y: int, type: String): void<br />+ dropBuilding(x: int, y: int, type: String): void<br />+ dropUnit(x: int, y: int, type: String, count: int): void<br /><br />+ trade(resourceType: String, resourceAmount: String, price: int, message: String): void<br />+ tradeList(): void<br />+ tradeAccept(id: int, message: String): void<br />+ tradeHistory(): void<br /><br />+ showPriceList(): void<br />+ buy(itemName: String, itemAmount: int): void<br />+ sell(itemName: String, itemAmount: int): void</div></div></div></foreignObject><text x="6" y="177" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ MainMenuController(): &lt;&lt;constructor&gt;&gt;...</text></switch></g><path d="M 400 306 L 400 280 L 540 280 L 540 306" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 306 L 400 370 L 540 370 L 540 306" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 306 L 540 306" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 293px; margin-left: 401px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt;Enum&gt;&gt;<br />Situation</div></div></div></foreignObject><text x="470" y="297" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt;Enum&gt;&gt;...</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 130px; height: 1px; padding-top: 313px; margin-left: 406px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 60px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">STANDING,<br />DEFENSIVE,<br />OFFENSIVE;</div></div></div></foreignObject><text x="406" y="325" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">STANDING,...</text></switch></g><path d="M 320 470 L 396.57 473.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 384.37 479.74 L 397.68 473.9 L 385.03 466.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 399.72 324.05 L 339.84 378.68" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 321.37 395.53 L 325.65 381.67 L 339.84 378.68 L 335.56 392.54 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>